spring:
  config:
    activate:
      on-profile: docker
  redis:
    host: redis
    port: 6379
eureka:
  client:
    serviceUrl:
      defaultZone: http://discovery-service:8761/eureka/
    healthcheck:
      enabled: true
---
spring:
  config:
    activate:
      on-profile: debug
  redis:
    host: localhost
    port: 6379
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
    healthcheck:
      enabled: true
---
server:
  port: 8091
management:
  endpoints:
    web:
      exposure:
        include: '*' #health,info
  endpoint:
    health:
      show-details: always
  health:
    redis:
      enabled: true
    ratelimiters:
      enabled: true
    circuitbreakers:
      enabled: true
spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      routes:
        - id: payment-service
          uri: lb://payment-service
          predicates:
            - Path=/payment/**
          filters:
            - RewritePath=/api/payment/(?<path>.*), $\{path}
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 20 # show how many request allow in seconds
                redis-rate-limiter.burstCapacity: 40
            - name: CircuitBreaker
              args:
                name: backendB
                fallbackUri: forward:/defaultFallback
resilience4j.circuitbreaker:
  configs:
    custom:
      registerHealthIndicator: true
      slidingWindowType: TIME_BASED # count or time base
      slidingWindowSize: 10 # we will use this parameter to record the last N requests to make the circuit breaker trip or open.
      failureRateThreshold: 5 # the percentage of the total sliding-window-size that fails and will cause the circuit breaker trips to open state
      slowCallRateThreshold: 30 # it shows the percentage of the total sliding-window-size that fails which will cause the circuit breaker trips to open state
      slowCallDurationThreshold: 200ms # is the time taken to indicate the received response exceeds this configuration time will be recorded as an error count
      minimumNumberOfCalls: 5 # Configures the minimum number of calls which are required (per sliding window period) before the CircuitBreaker can calculate the error rate or slow call rate.
      permittedNumberOfCallsInHalfOpenState: 3 # Configures the number of permitted calls when the CircuitBreaker is half open.
      waitDurationInOpenState: 2s # The time that the CircuitBreaker should wait before transitioning from open to half-open.
      automaticTransitionFromOpenToHalfOpenEnabled: true
      eventConsumerBufferSize: 10
  instances:
    backendA:
      baseConfig: custom
    backendB:
      slidingWindowSize: 10
      minimumNumberOfCalls: 10
      permittedNumberOfCallsInHalfOpenState: 3
      waitDurationInOpenState: 1s
      failureRateThreshold: 50
      eventConsumerBufferSize: 10